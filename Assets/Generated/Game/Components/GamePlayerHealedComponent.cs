//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerHealedComponent playerHealed { get { return (PlayerHealedComponent)GetComponent(GameComponentsLookup.PlayerHealed); } }
    public bool hasPlayerHealed { get { return HasComponent(GameComponentsLookup.PlayerHealed); } }

    public void AddPlayerHealed(float newValue) {
        var index = GameComponentsLookup.PlayerHealed;
        var component = (PlayerHealedComponent)CreateComponent(index, typeof(PlayerHealedComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerHealed(float newValue) {
        var index = GameComponentsLookup.PlayerHealed;
        var component = (PlayerHealedComponent)CreateComponent(index, typeof(PlayerHealedComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerHealed() {
        RemoveComponent(GameComponentsLookup.PlayerHealed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerHealed;

    public static Entitas.IMatcher<GameEntity> PlayerHealed {
        get {
            if (_matcherPlayerHealed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerHealed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerHealed = matcher;
            }

            return _matcherPlayerHealed;
        }
    }
}
